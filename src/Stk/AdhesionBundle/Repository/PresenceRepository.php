<?php

namespace Stk\AdhesionBundle\Repository;
use Stk\AdhesionBundle\Entity\Membre;

/**
 * PresenceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PresenceRepository extends \Doctrine\ORM\EntityRepository
{

    public function countPresenceBy(Membre $membre, $year) {
        $query = $this->createQueryBuilder('presence')
            ->select('count(presence.id)')
            ->where('YEAR(presence.date) = :year')->setParameter('year', $annee)
            ->andWhere('presence.membre = :membre')->setParameter('membre', $membre);
        return $query->getQuery()->getOneOrNullResult();
    }
    
    public function countLateBy(Membre $membre, $annee, $defineLate) {
        $query = $this->createQueryBuilder('presence')
            ->select('count(presence.id)')
            ->where('YEAR(presence.date) = :year')->setParameter('year', $annee)
            ->andWhere('presence.membre = :membre')->setParameter('membre', $membre)
            ->andWhere('presence.lateTime > :defineLate')->setParameter('defineLate', $defineLate);
        return $query->getQuery()->getOneOrNullResult();
    }

    public function isExist(Membre $membre, \DateTime $date) {

        $query = $this->createQueryBuilder('presence')
            ->where('presence.date = :date')->setParameter('date', date('Y-m-d',$date->getTimestamp()))
            ->andWhere('presence.membre = :membre')->setParameter('membre', $membre);
        return $query->getQuery()->getResult() != null;
    }
    
    public function yearsDistinct() {
        $query = $this->createQueryBuilder('presence')
            ->select('DISTINCT YEAR(presence.date)');
        return $query->getQuery()->getResult();
    }

    public function deleteByYear($year) {
        $query = $this->createQueryBuilder('presence')
            ->delete()
            ->where('YEAR(presence.date) = :year')->setParameter('year', $year);
        return $query->getQuery()->getResult();
    }
}
